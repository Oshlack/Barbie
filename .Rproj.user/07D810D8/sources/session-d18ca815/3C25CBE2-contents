---
title: "Barbie"
output: 
  BiocStyle::html_document:
    toc: true
    toc_depth: 2
vignette: >
  %\VignetteIndexEntry{Quick start to Barbie}
  %\VignetteEngine{knitr::rmarkdown}
  %\VignetteEncoding{UTF-8}
date: "`r Sys.Date()`"
---

```{r, include = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>"
)
```

# Introduction

**BARBIE**: An R package for analysing barcode count data from clonal tracking experiments

Barcode count data reveals the clonal composition of pools of cells before and after perturbations in clonal tracking experiments, helping to track progeny cells back to their original progenitor cell.

This technique relies on each progenitor cell incorporating a unique DNA 
barcode, which is passed down to its offspring. Subsequent sequencing of these barcodes enables researchers to quantify progeny by counting the barcodes in 
the sample, reflecting the size of each clonal population.

**BARBIE** implements robust statistical methods for analyzing barcode count 
data from bulk sequencing, covering functions for data preprocessing, 
statistical testing, and visualization.

Key functions include:

 * `createBarbie()`
 
 * `tagTopBarcodes()`
 
 * `plotBarcodePairCorrelation()`
 
 * `clusterCorrelatingBarcodes()`
 
 * `plotSamplePairCorrelation()`
 
 * `plotBarcodeProportion()`
 
 * `testBarcodeBias()`
 
 * `plotBarcodeBiasScatterPlot()`

# Intallation

```{r install, eval=FALSE}
## Install BiocManager if not already installed
if (!requireNamespace("BiocManager", quietly = TRUE))
    install.packages("BiocManager")
## Load BiocManager
library(BiocManager)
## Install packages
BiocManager::install("ComplexHeatmap")
BiocManager::install("limma")
install.packages("magrittr")
install.packages("tidyr")
install.packages("dplyr")
install.packages("ggplot2")
install.packages("circlize")
install.packages("logistf")
install.packages("igraph")
install.packages("data.table")
install.packages("devtools")
library(devtools)
devtools::install()
```

# Load Dependecy

```{r library}
library(Barbie)
library(magrittr)
library(tidyr)
library(dplyr)
library(ggplot2)
library(circlize)
library(logistf)
library(igraph)
library(data.table)
library(ComplexHeatmap)
library(limma)
```

# Simulate Data to Use

```{r data}
## Sample conditions and color palettes
sampleConditions <- data.frame(
  Treat=factor(rep(c("ctrl", "drug"), each=6)),
  Time=rep(rep(1:2, each=3), 2))
conditionColor <- list(
  Treat=c(ctrl="#999999", drug="#112233"),
  Time=c("1"="#778899", "2"="#998877"))
## Barcode count data
 nbarcodes <- 50
 nsamples <- 12
 barcodeCount <- abs(matrix(rnorm(nbarcodes*nsamples), nbarcodes, nsamples))
 rownames(barcodeCount) <- paste0("Barcode", 1:nbarcodes)
```

# Example

```{r example, fig.width=8, fig.height=6}
## Passing `object`, `target` and `factorColors`
exampleBB <- createBarbie(
   object=barcodeCount, target=sampleConditions, factorColors=conditionColor)
```

```{r tag top, fig.width=8, fig.height=6}
## Tag top contributing Barcodes
exampleBB <- tagTopBarcodes(Barbie=exampleBB)
## visualize top vs. bottom contribution
plotBarcodePareto(Barbie=exampleBB) |> plot()
```

```{r tag top 2, fig.width=4, fig.height=3}
plotBarcodeSankey(Barbie=exampleBB) |> plot()
```

```{r barcode pair cor, fig.width=5, fig.height=3}
## visualize Barcode pairwise correlation
plotBarcodePairCorrelation(Barbie=exampleBB) |> plot()
```

```{r sample pair cor, fig.width=5, fig.height=4}
## visualize sample pair wise correlation
plotSamplePairCorrelation(Barbie=exampleBB)  |> plot()
```

```{r test diffProp, fig.width=5, fig.height=4}
## test Barcode differential proportion between sample groups
exampleBB <- testBarcodeBias(
  Barbie=exampleBB,
  sampleGroups="Treat",
  contrastLevels=c("ctrl", "drug"),
  method="diffProp"
  )
plotBarcodeBiasHeatmap(exampleBB) |> plot()
plotBarcodeBiasScatterPlot(exampleBB) |> plot()
```

```{r test diffOcc, fig.width=5, fig.height=4}
## test Barcode differential occurrence between sample groups
exampleBB <- testBarcodeBias(
  Barbie=exampleBB,
  sampleGroups="Treat",
  contrastLevels=c("ctrl", "drug"),
  method="diffOcc"
  )
plotBarcodeBiasHeatmap(exampleBB) |> plot()
plotBarcodeBiasScatterPlot(exampleBB) |> plot()
```


# References

# SessionInfo

```{r session info}
sessionInfo()
```

