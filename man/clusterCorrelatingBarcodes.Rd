% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BarcodePairCorrelation.R
\name{clusterCorrelatingBarcodes}
\alias{clusterCorrelatingBarcodes}
\title{Cluster "co-existing" Barcodes based on pairwise correlation}
\usage{
clusterCorrelatingBarcodes(
  barbieQ,
  method = "pearson",
  corCutoff = 0.95,
  dataCutoff = 0,
  BarcodeClusters = NULL,
  plotClusters = FALSE
)
}
\arguments{
\item{barbieQ}{A \code{barbieQ} object created by the \link{createBarbieQ} function.}

\item{method}{A string specifying the correlation method to use.
Defaults to "pearson". Options include: "pearson", "kendall", "spearman".}

\item{corCutoff}{A numeric value that sets the threshold for high correlation
Defaults to 0.95}

\item{dataCutoff}{A numeric value that sets the minimum level of
Barcode pair's log2(mean CPM) for a Barcode pair to be considered as
highly correlated co-existing Barcodes. Defaults to 0}

\item{BarcodeClusters}{A \code{list} of known groups containing different Barcodes
or a \code{vector}/\code{array} indicating Barcode groups. Defaults to NULL.}

\item{plotClusters}{A logical value. TRUE returns a plot showing
the predicted Barcode clusters. FALSE returns an updated \code{barbieQ} object.
Defaults to FALSE.}
}
\value{
A \code{barbieQ} object updated with adding a \code{data.frame} component of
Barcode cluster, called \code{BarcodeCluster}.
}
\description{
\code{clusterCorrelatingBarcodes()} groups "co-existing" Barcode into clusters by
identifying "co-existing" Barcode pairs based on two criteria:
\itemize{
\item The proportions of Barcodes across samples exhibit high correlation,
exceeding the threshold specified by \code{corCutoff}.
\item The log2(mean CPM) of the Barcode pair exceeds the threshold specified
by \code{dataCutoff}.
These two parameters can be manually optimized using the visualization
function \link{plotBarcodePairCorrelation}.
}
}
\examples{
nbarcodes <- 50
nsamples <- 12
count <- abs(matrix(rnorm(nbarcodes * nsamples), nbarcodes, nsamples))
rownames(count) <- paste0("Barcode", seq_len(nbarcodes))
barbieQ <- createBarbieQ(count)
clusterCorrelatingBarcodes(barbieQ, BarcodeClusters = c(rep(seq_len(10), 5)))
}
